{"version":3,"sources":["componentes/Header.js","componentes/Presentacion.js","componentes/Card.js","componentes/Portafolio.js","componentes/Gallery.js","serviceWorker.js","index.js"],"names":["Header","className","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","Presentacion","style","backgroundImage","data-stellar-background-ratio","Card","props","src","image","alt","title","subtitle","Portafolio","useState","data","setData","useEffect","fetch","then","response","json","data-filter","portafolio","map","card","photos","photo","caption","subcaption","thumbnail","Example","arguments","state","galleryOpened","toggleGallery","bind","this","setState","prevState","onClick","show","onClose","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0d68b8f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg site-navbar navbar-light bg-light\"\r\n      id=\"pb-navbar\"\r\n    >\r\n      <div className=\"container\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample09\"\r\n          aria-controls=\"navbarsExample09\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-md-center\"\r\n          id=\"navbarsExample09\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#section-home\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#section-portfolio\">\r\n                Portfolio\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#section-resume\">\r\n                Resume\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#section-about\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#section-contact\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Presentacion() {\r\n  return (\r\n    <section\r\n      className=\"site-hero\"\r\n      style={{backgroundImage:\"url('../images/image_1.jpg')\"}}\r\n      id=\"section-home\"\r\n      data-stellar-background-ratio=\"0.5\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row intro-text align-items-center justify-content-center\">\r\n          <div className=\"col-md-10 text-center pt-5\">\r\n            <h1 className=\"site-heading site-animate\">\r\n              Hola, soy <strong className=\"d-block\">Erick Jeronimo</strong>\r\n            </h1>\r\n            <strong className=\"d-block text-white text-uppercase letter-spacing\">\r\n              Este es mi CV\r\n            </strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Presentacion;","import React from 'react';\r\n\r\nfunction Card(props){\r\n    return(\r\n    <div className=\"single-portfolio col-sm-4 all mockup\">\r\n        <div className=\"relative\">\r\n            <div className=\"thumb\">\r\n                <div className=\"overlay overlay-bg\"></div>\r\n                <img className=\"image img-fluid\" src={props.image} alt=\"\" />\r\n            </div>\r\n            <a href={props.image} className=\"img-pop-up\">  \r\n                <div className=\"middle\">\r\n                    <div className=\"text align-self-center d-flex\"><img src=\"images/preview.png\" alt=\"\"/></div>\r\n                </div>\r\n            </a>                                  \r\n        </div>\r\n        <div className=\"p-inner\">\r\n            <h4>{props.title}</h4>\r\n            <div className=\"cat\">{props.subtitle}</div>\r\n        </div>                                         \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState, useEffect } from 'react';\r\nimport Card from '../componentes/Card';\r\n\r\nconst Portafolio = () => {\r\n    const [data,setData] = useState([]);useEffect(() => {\r\n        fetch('http://localhost:3000/portafoliodb')\r\n            .then(response => response.json())\r\n            .then(data => setData(data))\r\n    },[]);\r\n\r\n    return (\r\n        <section className=\"site-section\" id=\"section-portfolio\">\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"section-heading text-center col-md-12\">\r\n\t\t\t\t\t<h2>Featured <strong>Portfolio</strong></h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"filters\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li className=\"active\" data-filter=\"*\">All</li>\r\n\t\t\t\t\t<li data-filter=\".packaging\">Packaging</li>\r\n\t\t\t\t\t<li data-filter=\".mockup\">Mockup</li>\r\n\t\t\t\t\t<li data-filter=\".typography\">Typography</li>\r\n\t\t\t\t\t<li data-filter=\".photography\">Photography</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"filters-content\">\r\n\t\t\t\t<div className=\"row grid\">\r\n\t\t\t\t\t{data.portafolio ? data.portafolio.map(card => (\r\n\t\t\t\t\t\t<Card title={card.title} image={card.image} subtitle={card.subtitle} />\r\n\t\t\t\t\t)) : <div>cargando</div> }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</section>\r\n    );\r\n}\r\n\r\nexport default Portafolio;","import React, { Component } from 'react'\r\nimport ReactBnbGallery from 'react-bnb-gallery'\r\n\r\nconst photos = [{\r\n  photo: \"https://source.unsplash.com/aZjw7xI3QAA/1144x763\",\r\n  caption: \"Viñales, Pinar del Río, Cuba\",\r\n  subcaption: \"Photo by Simon Matzinger on Unsplash\",\r\n  thumbnail: \"https://source.unsplash.com/aZjw7xI3QAA/100x67\",\r\n}, {\r\n  photo: \"https://source.unsplash.com/c77MgFOt7e0/1144x763\",\r\n  caption: \"La Habana, Cuba\",\r\n  subcaption: \"Photo by Gerardo Sanchez on Unsplash\",\r\n  thumbnail: \"https://source.unsplash.com/c77MgFOt7e0/100x67\",\r\n}, {\r\n  photo: \"https://source.unsplash.com/QdBHnkBdu4g/1144x763\",\r\n  caption: \"Woman smoking a tobacco\",\r\n  subcaption: \"Photo by Hannah Cauhepe on Unsplash\",\r\n  thumbnail: \"https://source.unsplash.com/QdBHnkBdu4g/100x67\",\r\n}];\r\n\r\nclass Example extends Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.state = { galleryOpened: false };\r\n    this.toggleGallery = this.toggleGallery.bind(this);\r\n  }\r\n\r\n  toggleGallery() {\r\n    this.setState(prevState => ({\r\n      galleryOpened: !prevState.galleryOpened\r\n    }));\r\n  }\r\n\r\n  render () {\r\n    return (\r\n        <>\r\n      <button onClick={this.toggleGallery}>Open photo gallery</button>\r\n      <ReactBnbGallery\r\n        show={this.state.galleryOpened}\r\n        photos={photos}\r\n        onClose={this.toggleGallery} />\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Example;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Header from '../src/componentes/Header'\nimport Presentacion from '../src/componentes/Presentacion'\nimport Portafolio from '../src/componentes/Portafolio'\nimport Example from '../src/componentes/Gallery'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Presentacion />\n    <Portafolio />\n    <Example />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}